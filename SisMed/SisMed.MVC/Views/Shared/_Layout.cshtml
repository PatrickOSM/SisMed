@using SisMed.Util.Class
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">
    <title>@ViewBag.Title - SisMed</title>
    @Styles.Render("~/Content/css")
    @RenderSection("css", required: false)
    @Scripts.Render("~/bundles/modernizr")

    <script type='text/javascript'>
        var appInsights = window.appInsights || function (config) {
            function r(config) { t[config] = function () { var i = arguments; t.queue.push(function () { t[config].apply(t, i) }) } }
            var t = { config: config }, u = document, e = window, o = 'script', s = u.createElement(o), i, f; for (s.src = config.url || '//az416426.vo.msecnd.net/scripts/a/ai.0.js', u.getElementsByTagName(o)[0].parentNode.appendChild(s), t.cookie = u.cookie, t.queue = [], i = ['Event', 'Exception', 'Metric', 'PageView', 'Trace', 'Ajax']; i.length;) r('track' + i.pop()); return r('setAuthenticatedUserContext'), r('clearAuthenticatedUserContext'), config.disableExceptionTracking || (i = 'onerror', r('_' + i), f = e[i], e[i] = function (config, r, u, e, o) { var s = f && f(config, r, u, e, o); return s !== !0 && t['_' + i](config, r, u, e, o), s }), t
        }({
            instrumentationKey: 'e872e3bb-4b8e-47ff-b9e5-eb9674333c05'
        });

        window.appInsights = appInsights;
        appInsights.trackPageView();
    </script>
</head>

<body>

    <div id="wrapper">

        <nav class="navbar navbar-default navbar-static-top" role="navigation" style="margin-bottom: 0">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="@Url.Action("Index","Home")">
                    <img src="~/Images/logo-sismed.png" alt="SisMed">
                </a>
            </div>
            
            <div class="navbar-collapse collapse">
                @Html.Partial("_LoginPartial")
            </div>

            <div class="navbar-default sidebar" role="navigation">
                <div class="sidebar-nav navbar-collapse">
                    <ul class="nav" id="side-menu">
                        <li>
                            <a href="@Url.Action("Index", "Home", new { id = "dashboardLink" })"><i class="fa fa-dashboard fa-fw"></i> Dashboard</a>
                        </li>
                        <li>
                            <a href="#"><i class="fa fa-id-badge fa-fw"></i> Gerenciar<span class="fa arrow"></span></a>
                            <ul class="nav nav-second-level">
                                <li>
                                    <a href="@Url.Action("Index", "Agenda")">Agenda</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index", "FichasMedicas", new { id = "dashboardLink" })">Ficha Médica</a>
                                </li>
                            </ul>
                        </li>
                        <li>
                            <a href="#"><i class="fa fa-edit fa-fw"></i> Cadastros<span class="fa arrow"></span></a>
                            <ul class="nav nav-second-level">
                                <li>
                                    <a href="@Url.Action("Index", "Cargos")">Cargo</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index", "Cidades")">Cidade</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index", "Estados")">Estado</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index", "Funcionarios")">Funcionário</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index", "Pacientes")">Paciente</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index", "Sexos")">Sexo</a>
                                </li>
                                <li>
                                    <a href="@Url.Action("Index", "TiposSanguineos")">Tipo Sanguíneo</a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>

        <div id="page-wrapper">
            @RenderBody()
            <hr />
            <footer>
                <p>&copy; @DateTime.Now.Year - SisMed</p>
            </footer>
        </div>

    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/metisMenu")
    @Scripts.Render("~/bundles/raphael")
    @Scripts.Render("~/bundles/morris")
    @Scripts.Render("~/bundles/sb-admin-2")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/bundles/toastr")
    @Scripts.Render("~/bundles/site")
    <script>
        $(document).ready(function () {
            // Configurar o trigger das mensagens toastr
            var tempMessages = '@Html.Raw(TempData[ToastrProperties.MessagesKey])';

            if (!tempMessages) {
                tempMessages = "[]";
            }

            var viewMessages = '@Html.Raw(Response.Headers[ToastrProperties.MessagesKey])';

            if (!viewMessages) {
                viewMessages = "[]";
            }

            var allMessages = $.parseJSON(tempMessages).concat($.parseJSON(viewMessages));

            handleAjaxMessages();
            displayMessages(allMessages);
        });

        // Exibe todas as mensagens que estão listadas neste cabeçalho da chamada.
        function displayMessages(messages) {
            $.each(messages, function (idx, msg) {
                toastr[msg.type](msg.message, msg.title, {
                    fadeIn: msg.fadeIn,
                    fadeOut: msg.fadeOut,
                    timeOut: msg.timeOut,
                    positionClass: msg.positionClass,
                    onclick: function () {
                        var wnd = $("#AppMessageWindow").data("kendoWindow");
                        wnd.content(msg.message).center().open();
                    }
                });
            });
        }

        // Adiciona métodos que são tanto quanto ajaxSuccess como ajaxError
        function handleAjaxMessages() {
            $(document).ajaxSuccess(function (event, request) {
                checkAndHandleMessageFromHeader(request);
            }).ajaxError(function (event, request) {
                checkAndHandleMessageFromHeader(request);
            });
        }

        // Exibe as mensagens utilizando o Toastr
        function checkAndHandleMessageFromHeader(request) {
            // Adquire a mensagem utilizando o cabeçalho de resposta
            var msgs = request.getResponseHeader('@ToastrProperties.MessagesKey');

            if (!msgs) {
                msgs = "[]";
            }

            var allMessages = $.parseJSON(msgs);

            displayMessages(allMessages);
        }
    </script>
    @RenderSection("scripts", required: false)
</body>
</html>
