@model SisMed.MVC.ViewModels.EstadoViewModel

@{
    ViewBag.Title = "Detalhes";
}

<div class="row">
    <div class="col-lg-12">
        <h1 class="page-header">Detalhes Estado</h1>
    </div>
</div>
<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                Visualizar as informações
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Sigla, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Sigla, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        </div>
                    </div>
                <div class="col-md-12">
                    <table class="table table-striped table-bordered table-hover" id="tabelaCidades" cellspacing="0">
                        <thead>
                            <tr>
                                <th>@Html.DisplayNameFor(model => model.Cidades.SingleOrDefault().Nome)</th>
                                <th>Ações</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Cidades)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => item.Nome)</td>
                                    <td>
                                        <button type="button" class="btn btn-sm btn-warning" onclick="location.href='@Url.Action("Edit", "Cidades", new { id = item.CidadeId })'">
                                            <i class="glyphicon glyphicon-pencil"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-info" onclick="location.href='@Url.Action("Details", "Cidades", new { id = item.CidadeId })'">
                                            <i class="glyphicon glyphicon-eye-open"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-danger" onclick="location.href='@Url.Action("Delete", "Cidades", new { id = item.CidadeId })'">
                                            <i class="glyphicon glyphicon-erase"></i>
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                </div><div class="form-group">
                    <button type="submit" class="btn btn-default" onclick="location.href='@Url.Action("Edit", "Estados", new { id = Model.EstadoId })'">Editar</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript" src="https://cdn.datatables.net/v/bs/jszip-2.5.0/pdfmake-0.1.18/dt-1.10.13/b-1.2.4/b-colvis-1.2.4/b-html5-1.2.4/b-print-1.2.4/cr-1.3.2/fc-3.2.2/fh-3.1.2/r-2.1.1/sc-1.4.2/datatables.min.js"></script>

    <script>
        $(document).ready(function () {

            //Cria o DataTable
            var tabela = $('#tabelaCidades').DataTable({
                "language": {
                    "url": "//cdn.datatables.net/plug-ins/1.10.13/i18n/Portuguese-Brasil.json"
                }
            });
        });
    </script>
}